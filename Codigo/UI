package Game;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Random;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;

public class UI {
	GameManager gm;
	
	//Declaramos todas las variables que vamos a utilizar
	JFrame window;
	public JTextArea messageText;
	public JTextArea scoreBoard;
	
	public JPanel bgPanel[] = new JPanel[2];
	public JLabel bgLabel[] = new JLabel[2];
	
	private boolean flag = true;
	private int handsPosition = 1;
	private int ballPosition = 0;
	private JLabel handsLabel;
	private JLabel ballLabel;
	private int goals = 0 ;
	
	//Creamos interfaz grafica de usuario
	public UI(GameManager gm) throws InterruptedException {
		this.gm = gm;
		
		createMainField();
		
		generateScreen();
		
		window.setVisible(true);
		
		gameLoop();
		
	}
	
	/**
	 * Funcionalidad del juego
	 * @throws InterruptedException
	 */
	public void gameLoop() throws InterruptedException {
		//rotate hands of goal keeper
		int aux = 0;
		Random rand = new Random();

		while (true) {
			do {
				Thread.sleep(300);
				aux = (aux + 1) % 3;
				setHandsPosition(rand.nextInt(3) + 1);
			} while (flag);

			int finalHandsPosition = getHandsPosition();
			ballLabel.setBounds(100 * ballPosition, 100, 90, 90);
			if (finalHandsPosition == ballPosition) {
				System.out.println("Fail");
				messageText.setText("Fail");

			} else {
				System.out.println("Goal!!");
				messageText.setText("Goal!!");
				goals = goals + 1;

			}

			if (goals > 2) {
				messageText.setText("YOU WIN");
				Thread.sleep(500);
				System.exit(0);
			}else {
				Thread.sleep(500);
				scoreBoard.setText(goals+"/3");
				ballLabel.setBounds(200,200,90,90);
				messageText.setText("Penalty");
				flag = true;
			}
		}

	}
	
	/**
	 * Inicializamos como va a ser la pantalla
	 */
	public void createMainField() {
		window = new JFrame();
		window.setSize(500,500);
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//window.getContentPane().setBackground(Color.gray);
		window.setLayout(null);
		
		messageText= new JTextArea("Penalty");
		messageText.setBounds(40,10,200,50);
		messageText.setBackground(Color.white);
		messageText.setForeground(Color.black);
		messageText.setEditable(false);
		messageText.setLineWrap(true);
		messageText.setWrapStyleWord(true);
		messageText.setFont(new Font("comic sans",Font.PLAIN,40));
		window.add(messageText);
		
		scoreBoard= new JTextArea("0/3");
		scoreBoard.setBounds(400,10,70,50);
		scoreBoard.setBackground(Color.white);
		scoreBoard.setForeground(Color.black);
		scoreBoard.setEditable(false);
		scoreBoard.setLineWrap(true);
		scoreBoard.setWrapStyleWord(true);
		scoreBoard.setFont(new Font("comic sans",Font.PLAIN,40));
		window.add(scoreBoard);
		
	}
	
	/**
	 * 
	 * @param bgNum
	 * @param bgFileName
	 */
	public void createBackground(int bgNum, String bgFileName) {
		bgPanel[bgNum] = new JPanel();
		bgPanel[bgNum].setBounds(0,0,500,400);
		bgPanel[bgNum].setLayout(null);
		//bgPanel[bgNum].setBackground(Color.blue);
		window.add(bgPanel[bgNum]);
		
		bgLabel[bgNum] = new JLabel();
		bgLabel[bgNum].setBounds(0,0,500,300);
		ImageIcon bgIcon = new ImageIcon(getClass().getClassLoader().getResource(bgFileName));
		bgLabel[bgNum].setIcon(bgIcon);
		
		
	}
	
	/**
	 * 
	 * @param bgNum
	 * @param objx
	 * @param ocjy
	 * @param objWidth
	 * @param obdjHeight
	 * @param objFileName
	 * @return
	 */
	public JLabel createObject(int bgNum, int objx, int ocjy, int objWidth, int obdjHeight, String objFileName) {
		JLabel objectLabel = new JLabel();
		objectLabel.setBounds(objx, ocjy, objWidth, obdjHeight);
		ImageIcon objectIcon = new ImageIcon(getClass().getClassLoader().getResource(objFileName));
		objectLabel.setIcon(objectIcon);
		bgPanel[bgNum].add(objectLabel);
		bgPanel[bgNum].add(bgLabel[bgNum]);
		return objectLabel;
		
	}
	
	/**
	 * 
	 * @param bgNum
	 * @param objx
	 * @param ocjy
	 * @param objWidth
	 * @param obdjHeight
	 * @param objFileName
	 * @param id
	 */
	public void createButton(int bgNum, int objx, int ocjy, int objWidth, int obdjHeight, String objFileName, int id) {
		int hands = id;
		JLabel objectLabel = new JLabel();
		objectLabel.setBounds(objx, ocjy, objWidth, obdjHeight);
		objectLabel.setBackground(Color.red);
		ImageIcon objectIcon = new ImageIcon(getClass().getClassLoader().getResource(objFileName));
		objectLabel.setIcon(objectIcon);
		
		
		objectLabel.addMouseListener(new MouseListener() {
			public void mouseClicked(MouseEvent e) {
				//TO-DO play with this
				ballPosition = hands;
				flag = false;
					
			}

			@Override
			public void mousePressed(MouseEvent e) {}
			public void mouseReleased(MouseEvent e) {}
			public void mouseEntered(MouseEvent e) {}
			public void mouseExited(MouseEvent e) {}
		});
		
		bgPanel[bgNum].add(objectLabel);
		bgPanel[bgNum].add(bgLabel[bgNum]);
		
	} 

	public void generateScreen() {
		//Screen1
		createBackground(1,"goalFootball2.png");
		ballLabel=createObject(1,200,200,90,90,"soccerball2.png");
		handsLabel = createObject(1,100,100,100,100,"goalKeeperHands2.png");
		createButton(1,100,300,100,100,"arrow2.png",1);
		createButton(1,200,300,100,100,"arrow2.png",2);
		createButton(1,300,300,100,100,"arrow2.png",3);
	}

	/**
	 * 
	 * @return
	 */
	public int getHandsPosition() {
		return handsPosition;
	}


	/**
	 * 
	 * @param handsPosition
	 */
	public void setHandsPosition(int handsPosition) {
		if(handsPosition > 0 && handsPosition < 4) {
			handsLabel.setBounds(100*handsPosition,100,100,100);
			this.handsPosition = handsPosition;
		}
	}
}
